version: "3.5"

services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    # image: ana/minha-api-matadora:latest
    build: .
    hostname: api01
    environment:
      - DB_HOSTNAME=db
      - PORT=8080
    
    # Não é necessário expor qualquer porta além da porta do load balancer,
    # mas é comum as pessoas o fazerem para testarem suas APIs e conectarem
    # ao banco de dados na fase de desenvolvimento.
    # ports:
    #   - "8081:3001"
    expose:
      - "8080"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "80MB"

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api 
    hostname: api02
    # ports:
    #   - "8082:3001"
 
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
        # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999" 
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"

  db:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123
      - MONGO_INITDB_DATABASE=rinha
    ports:
      - "27017:27017" # MongoDB default port
    volumes:
      - ./mongo_init.js:/docker-entrypoint-initdb.d/mongo_init.js # Optional: MongoDB initialization script
      - ./mongod.conf:/etc/mongod.conf:ro
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "410MB"

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
